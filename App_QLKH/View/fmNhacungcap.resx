<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>