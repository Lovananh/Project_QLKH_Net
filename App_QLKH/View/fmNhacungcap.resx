<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /T85Fomukrt/8AAAAABJRU5ErkJggg==
</value>
  </data>
</root>