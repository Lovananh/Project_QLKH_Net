<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>